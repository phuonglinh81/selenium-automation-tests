# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestAddproducts():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_addproducts(self):
    self.driver.get("http://127.0.0.1:5500/pages/products.html")
    self.driver.set_window_size(1060, 776)
    self.driver.find_element(By.ID, "add-product-btn").click()
    assert self.driver.switch_to.alert.text == "Please enter a product price"
    self.driver.find_element(By.ID, "product-name").click()
    self.driver.find_element(By.ID, "product-name").send_keys("Mouse")
    self.driver.find_element(By.CSS_SELECTOR, ".products-container").click()
    self.driver.find_element(By.ID, "add-product-btn").click()
    assert self.driver.switch_to.alert.text == "Please enter a product price"
    self.driver.find_element(By.ID, "product-price").click()
    self.driver.find_element(By.ID, "product-price").send_keys("0")
    self.driver.find_element(By.ID, "add-product-btn").click()
    assert self.driver.switch_to.alert.text == "Product price must be greater than 0"
    self.driver.find_element(By.ID, "product-price").click()
    self.driver.find_element(By.ID, "product-price").send_keys("-5")
    self.driver.find_element(By.ID, "add-product-btn").click()
    assert self.driver.switch_to.alert.text == "Product price must be greater than 0"
    self.driver.find_element(By.ID, "product-price").click()
    self.driver.find_element(By.ID, "product-price").send_keys("80")
    self.driver.find_element(By.ID, "add-product-btn").click()
  
